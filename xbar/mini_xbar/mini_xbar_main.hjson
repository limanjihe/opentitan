// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// ------------------- W A R N I N G: A U T O - G E N E R A T E D   C O D E !! -------------------//
// PLEASE DO NOT HAND-EDIT THIS FILE. IT HAS BEEN AUTO-GENERATED WITH THE FOLLOWING COMMAND:
// util/topgen.py -t hw/top_earlgrey/data/top_earlgrey.hjson -o hw/top_earlgrey/

{
  name: main
  clock_srcs:
  {
    clk_main_i: main
  }
  clock_group: infra
  reset: rst_main_ni
  reset_connections:
  {
    rst_main_ni:
    {
      name: lc
      domain: "0"
    }
  }
  clock_connections:
  {
    clk_main_i: clkmgr_aon_clocks.clk_main_infra
  }
  domain:
  [
    "0"
  ]
  connections:
  {
    rv_core_ibex.corei:
    [
      rv_dm.mem
      peri
    ]
    rv_core_ibex.cored:
    [
      rv_dm.mem
      rv_dm.regs
      rv_plic
      rv_core_ibex.cfg
      rv_timer
      peri
    ]
    rv_dm.sba:
    [
      rv_dm.mem
      rv_dm.regs
      rv_plic
      rv_core_ibex.cfg
      rv_timer
      peri
    ]
  }
  nodes:
  [
    {
      name: rv_core_ibex.corei
      type: host
      clock: clk_main_i
      reset: rst_main_ni
      pipeline: false
      xbar: false
      stub: false
      inst_type: ""
      req_fifo_pass: true
      rsp_fifo_pass: true
    }
    {
      name: rv_core_ibex.cored
      type: host
      clock: clk_main_i
      reset: rst_main_ni
      pipeline: false
      xbar: false
      stub: false
      inst_type: ""
      req_fifo_pass: true
      rsp_fifo_pass: true
    }
    {
      name: rv_dm.sba
      type: host
      clock: clk_main_i
      reset: rst_main_ni
      req_fifo_pass: false
      rsp_fifo_pass: false
      xbar: false
      stub: false
      inst_type: ""
      pipeline: true
    }
    {
      name: rv_dm.regs
      type: device
      clock: clk_main_i
      reset: rst_main_ni
      req_fifo_pass: false
      rsp_fifo_pass: false
      inst_type: rv_dm
      addr_range:
      [
        {
          base_addr: 0x40000
          size_byte: 0x4
        }
      ]
      xbar: false
      stub: false
      pipeline: true
    }
    {
      name: rv_dm.mem
      type: device
      clock: clk_main_i
      reset: rst_main_ni
      req_fifo_pass: false
      rsp_fifo_pass: false
      inst_type: rv_dm
      addr_range:
      [
        {
          base_addr: 0x30000
          size_byte: 0x1000
        }
      ]
      xbar: false
      stub: false
      pipeline: true
    }
    {
      name: rv_plic
      type: device
      clock: clk_main_i
      reset: rst_main_ni
      inst_type: rv_plic
      req_fifo_pass: false
      rsp_fifo_pass: false
      addr_range:
      [
        {
          base_addr: 0x8000000
          size_byte: 0x8000000
        }
      ]
      xbar: false
      stub: false
      pipeline: true
    }
    {
      name: rv_core_ibex.cfg
      type: device
      clock: clk_main_i
      reset: rst_main_ni
      req_fifo_pass: false
      rsp_fifo_pass: false
      inst_type: rv_core_ibex
      addr_range:
      [
        {
          base_addr: 0x10000
          size_byte: 0x100
        }
      ]
      xbar: false
      stub: false
      pipeline: true
    }
    {
      name: rv_timer
      type: device
      clock: clk_main_i
      reset: rst_main_ni
      req_fifo_pass: false
      rsp_fifo_pass: false
      inst_type: rv_timer
      addr_range:
      [
        {
          base_addr: 0x20000
          size_byte: 0x200
        }
      ]
      xbar: false
      stub: false
      pipeline: true
    }
    {
      name: peri
      type: device
      clock: clk_main_i
      reset: rst_main_ni
      req_fifo_pass: false
      rsp_fifo_pass: false
      xbar: true
      stub: false
      pipeline: true
      addr_range:
      [
        {
          base_addr: 0x80000000
          size_byte: 0x80000000
        }
      ]
    }
  ]
  clock: clk_main_i
  type: xbar
}
